
::main { ::pretty_div::main }

::pretty_div::main {
  fn(ref(w1 w26) _)
  ::pretty_div = fn(4 fn(2 w8))
  ::std::IO::println = fn(ref(w1 w6) fn(w8 _))
  ::pretty_div = fn(5 fn(3 w13))
  ::std::IO::println = fn(ref(w6 w11) fn(w13 _))
  ::pretty_div = fn(1 fn(1 w18))
  ::std::IO::println = fn(ref(w11 w16) fn(w18 _))
  ::pretty_div = fn(1 fn(0 w23))
  ::std::IO::println = fn(ref(w16 w21) fn(w23 _))
  ::pretty_div = fn(10 fn(3 w28))
  ::std::IO::println = fn(ref(w21 w26) fn(w28 _))
}

::pretty_div {
  fn(dup9(w4 w24) fn(w1 w22))
  ::std::numeric::N32::eq::eq = fn(ref(w1 w17) fn(ref(0 _) ?(::pretty_div::3 ::pretty_div::2 x(w24 x(w17 x(w22 w4))))))
}

::pretty_div::2 { x(_ x(_ x(tup(19 tup(tup(100 tup(105 tup(118 tup(105 tup(115 tup(105 tup(111 tup(110 tup(32 tup(98 tup(121 tup(32 tup(122 tup(101 tup(114 tup(111 tup(32 tup(58 tup(79 w7))))))))))))))))))) w7)) _))) }

::pretty_div::3 {
  x(w4 x(dup17(w0 w16) x(tup(w20 tup(tup(124 tup(95 tup(32 w21))) w22)) w1)))
  ::std::numeric::N32::div::div = fn(w1 fn(w0 w11))
  ::std::numeric::N32::to_string::to_string = fn(w4 tup(@add(13 w23) tup(w21 tup(32 tup(47 tup(32 w24))))))
  ::std::numeric::N32::to_string::to_string = fn(w16 tup(@add(w23 w25) tup(w24 tup(32 tup(32 tup(95 tup(124 tup(32 tup(61 tup(32 w26))))))))))
  ::std::numeric::N32::to_string::to_string = fn(w11 tup(@add(w25 w20) tup(w26 w22)))
}

::std::numeric::N32::div::div { fn(@div(w1 out) fn(w1 out)) }

::std::numeric::N32::eq::eq { fn(ref(dup26(w0 @eq(w10 out)) w0) fn(ref(dup27(w3 w10) w3) out)) }

::std::numeric::N32::to_string::to_string {
  fn(w0 w10)
  ::std::numeric::N32::eq::ne = fn(ref(w0 w6) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w6 w10))))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 {
  x(w7 w6)
  ::std::numeric::N32::eq::ne = fn(ref(w7 w1) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w1 w6))))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup44(w0 w7) x(w11 w15))
  ::std::numeric::N32::rem::rem = fn(w0 fn(10 w1))
  ::std::unicode::Char::add_n32::add = fn(48 fn(w1 w2))
  ::std::data::List::concat::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::div::div = fn(w7 fn(10 w8))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::numeric::N32::eq::ne { fn(ref(dup50(w0 @ne(w10 out)) w0) fn(ref(dup51(w3 w10) w3) out)) }

::std::data::List::concat::concat {
  fn(tup(w5 tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21))))
  ::std::numeric::N32::add::add = fn(w5 fn(w10 w18))
}

::std::numeric::N32::add::add { fn(@add(w1 out) fn(w1 out)) }

::std::unicode::Char::add_n32::add { fn(@add(w1 out) fn(w1 out)) }

::std::numeric::N32::rem::rem { fn(@rem(w1 out) fn(w1 out)) }

::std::numeric::N32::sub::sub { fn(@sub(w1 out) fn(w1 out)) }

::std::unicode::String::to_chars::cast { fn(w0 w0) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w15) fn(w3 _))
  ::std::unicode::String::to_chars::cast = fn(w3 tup(w8 tup(w9 _)))
  ::std::IO::print::1 = x(x(w1 w15) x(w8 w9))
}

::std::IO::print::1 {
  x(w8 x(w6 w5))
  ::std::numeric::N32::eq::ne = fn(ref(w6 w1) fn(ref(0 _) ?(::std::IO::print::3 ::std::IO::print::2 x(w8 x(w1 w5)))))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 tup(w4 w5)))
  ::std::numeric::N32::sub::sub = fn(w15 fn(1 w1))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(w3 w8) w8) fn(w3 _)) }

