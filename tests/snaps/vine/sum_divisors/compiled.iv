
::main { ::sum_divisors::main }

::sum_divisors::main {
  fn(ref(w1 w9) _)
  ::sum_divisors::main::1 = x(x(w1 w9) 1)
}

::sum_divisors::main::1 {
  x(w7 w5)
  ::std::numeric::N32::ord::le = fn(ref(w5 w1) fn(ref(100 _) ?(::sum_divisors::main::3 ::sum_divisors::main::2 x(w7 w1))))
}

::sum_divisors::main::2 {
  x(x(w20 w43) dup14(w0 dup14(w24 dup14(w31 dup14(w9 w16)))))
  ::sum_divisors = fn(w0 w1)
  ::std::numeric::N32::add::add = fn(w24 fn(1 w25))
  ::std::numeric::N32::eq::eq = fn(ref(w1 w22) fn(ref(w25 _) ?(::sum_divisors::main::6 ::sum_divisors::main::5 x(w31 x(x(w22 w30) w28)))))
  ::std::numeric::N32::to_string::to_string = fn(w9 tup(@add(2 w35) tup(w33 tup(58 tup(32 w36)))))
  ::std::numeric::N32::to_string::to_string = fn(w30 tup(@add(w35 w37) tup(w36 w38)))
  ::std::unicode::String::to_string::to_string = fn(w28 tup(@add(w37 w32) tup(w38 w34)))
  ::std::IO::println = fn(ref(w20 w6) fn(tup(w32 tup(w33 w34)) _))
  ::std::numeric::N32::add::add = fn(w16 fn(1 w17))
  ::sum_divisors::main::1 = x(x(w6 w43) w17)
}

::sum_divisors::main::3 { x(x(w2 w2) _) }

::sum_divisors::main::5 { x(_ x(x(w3 w3) tup(8 tup(tup(32 tup(40 tup(112 tup(114 tup(105 tup(109 tup(101 tup(41 w7)))))))) w7)))) }

::sum_divisors::main::6 {
  x(w10 x(x(w9 w1) w11))
  ::std::numeric::N32::mul::mul = fn(w10 fn(2 w4))
  ::std::numeric::N32::eq::eq = fn(ref(w9 w1) fn(ref(w4 _) ?(::sum_divisors::main::8 ::sum_divisors::main::7 w11)))
}

::sum_divisors::main::7 { tup(11 tup(tup(32 tup(40 tup(112 tup(101 tup(114 tup(102 tup(101 tup(99 tup(116 tup(33 tup(41 w4))))))))))) w4)) }

::sum_divisors::main::8 { tup(0 tup(w4 w4)) }

::std::numeric::N32::ord::le { fn(ref(dup30(w0 @le(w10 out)) w0) fn(ref(dup31(w3 w10) w3) out)) }

::std::numeric::N32::eq::eq { fn(ref(dup34(w0 @eq(w10 out)) w0) fn(ref(dup35(w3 w10) w3) out)) }

::std::numeric::N32::add::add { fn(@add(w1 out) fn(w1 out)) }

::std::numeric::N32::mul::mul { fn(@mul(w1 out) fn(w1 out)) }

::std::numeric::N32::to_string::to_string {
  fn(w0 w10)
  ::std::numeric::N32::eq::ne = fn(ref(w0 w6) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w6 w10))))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 {
  x(w7 w6)
  ::std::numeric::N32::eq::ne = fn(ref(w7 w1) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w1 w6))))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup60(w0 w7) x(w11 w15))
  ::std::numeric::N32::rem::rem = fn(w0 fn(10 w1))
  ::std::unicode::Char::add_n32::add = fn(48 fn(w1 w2))
  ::std::data::List::concat::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::div::div = fn(w7 fn(10 w8))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::numeric::N32::eq::ne { fn(ref(dup66(w0 @ne(w10 out)) w0) fn(ref(dup67(w3 w10) w3) out)) }

::std::data::List::concat::concat {
  fn(tup(w5 tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21))))
  ::std::numeric::N32::add::add = fn(w5 fn(w10 w18))
}

::std::unicode::Char::add_n32::add { fn(@add(w1 out) fn(w1 out)) }

::std::numeric::N32::rem::rem { fn(@rem(w1 out) fn(w1 out)) }

::std::numeric::N32::div::div { fn(@div(w1 out) fn(w1 out)) }

::std::unicode::String::to_string::to_string { fn(w0 w0) }

::sum_divisors {
  fn(w0 w20)
  ::sum_divisors::1 = x(x(w0 w12) x(x(1 w10) 2))
  ::std::numeric::N32::eq::ne = fn(ref(w12 w14) fn(ref(1 _) ?(::sum_divisors::12 ::sum_divisors::11 x(w14 x(x(w10 w20) _)))))
}

::sum_divisors::1 {
  x(x(w12 w17) x(w10 dup110(w0 dup110(w1 w13))))
  ::std::numeric::N32::mul::mul = fn(w0 fn(w1 w2))
  ::std::numeric::N32::ord::le = fn(ref(w2 _) fn(ref(w12 w5) ?(::sum_divisors::3 ::sum_divisors::2 x(x(w5 w17) x(w10 w13)))))
}

::sum_divisors::2 {
  x(x(dup112(w17 w26) w27) x(w14 dup115(w18 w23)))
  ::std::numeric::N32::rem::rem = fn(w17 fn(w18 w19))
  ::std::numeric::N32::eq::ne = fn(ref(w19 _) fn(ref(0 _) ?(::sum_divisors::6 ::sum_divisors::5 x(x(w26 w27) x(w14 w23)))))
}

::sum_divisors::3 { x(x(w4 w4) x(x(w2 w2) _)) }

::sum_divisors::5 {
  x(w6 x(w4 w2))
  ::std::numeric::N32::add::add = fn(w2 fn(1 w1))
  ::sum_divisors::1 = x(w6 x(w4 w1))
}

::sum_divisors::6 {
  x(x(w4 w26) x(x(w2 w24) dup130(w6 dup130(w19 dup130(w10 w15)))))
  ::sum_divisors::7 = x(x(w4 w21) x(w19 x(w6 w18)))
  ::std::numeric::N32::sub::sub = fn(w18 fn(1 w9))
  ::std::numeric::N32::sub::sub = fn(w10 fn(1 w11))
  ::std::numeric::N32::div::div = fn(w9 fn(w11 w12))
  ::std::numeric::N32::mul::mul = fn(w2 fn(w12 w14))
  ::std::numeric::N32::add::add = fn(w15 fn(1 w16))
  ::sum_divisors::1 = x(x(w21 w26) x(x(w14 w24) w16))
}

::sum_divisors::7 {
  x(x(dup135(w0 w14) w15) x(dup136(w1 w13) w7))
  ::std::numeric::N32::rem::rem = fn(w0 fn(w1 w2))
  ::std::numeric::N32::eq::eq = fn(ref(w2 _) fn(ref(0 _) ?(::sum_divisors::9 ::sum_divisors::8 x(x(w14 w15) x(w13 w7)))))
}

::sum_divisors::8 {
  x(x(w10 w15) x(dup142(w0 dup142(w3 w13)) x(w7 w12)))
  ::std::numeric::N32::mul::mul = fn(w7 fn(w0 w2))
  ::std::numeric::N32::div::div = fn(w10 fn(w3 w5))
  ::sum_divisors::7 = x(x(w5 w15) x(w13 x(w2 w12)))
}

::sum_divisors::9 { x(x(w4 w4) x(_ x(w1 w1))) }

::sum_divisors::11 {
  x(w7 x(x(w6 w3) _))
  ::std::numeric::N32::add::add = fn(w7 fn(1 w1))
  ::std::numeric::N32::mul::mul = fn(w6 fn(w1 w3))
}

::sum_divisors::12 { x(_ x(x(w2 w2) _)) }

::std::numeric::N32::sub::sub { fn(@sub(w1 out) fn(w1 out)) }

::std::unicode::String::to_chars::cast { fn(w0 w0) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w15) fn(w3 _))
  ::std::unicode::String::to_chars::cast = fn(w3 tup(w8 tup(w9 _)))
  ::std::IO::print::1 = x(x(w1 w15) x(w8 w9))
}

::std::IO::print::1 {
  x(w8 x(w6 w5))
  ::std::numeric::N32::eq::ne = fn(ref(w6 w1) fn(ref(0 _) ?(::std::IO::print::3 ::std::IO::print::2 x(w8 x(w1 w5)))))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 tup(w4 w5)))
  ::std::numeric::N32::sub::sub = fn(w15 fn(1 w1))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(w3 w8) w8) fn(w3 _)) }

