
::main { ::loop_vi_loop::main }

::loop_vi_loop::main {
  fn(ref(w1 w11) _)
  ::loop_vi_loop::main::1 = x(x(w1 w11) 0)
}

::loop_vi_loop::main::1 {
  x(w8 x(w6 w5))
  ::std::numeric::N32::ord::lt = fn(ref(w6 w1) fn(ref(5 _) ?(::loop_vi_loop::main::3 ::loop_vi_loop::main::2 x(w8 x(w1 w5)))))
}

::loop_vi_loop::main::2 {
  x(x(w7 w16) x(w5 w4))
  ::std::numeric::N32::add::add = fn(w5 fn(1 w1))
  ::loop_vi_loop::main::4 = x(x(w7 w12) x(x(w4 w10) 0))
  ::loop_vi_loop::main::1 = x(x(w12 w16) x(w1 w10))
}

::loop_vi_loop::main::3 { x(x(w3 w3) _) }

::loop_vi_loop::main::4 {
  x(w9 x(w7 w5))
  ::std::numeric::N32::ord::lt = fn(ref(w5 w1) fn(ref(5 _) ?(::loop_vi_loop::main::6 ::loop_vi_loop::main::5 x(w9 x(w7 w1)))))
}

::loop_vi_loop::main::5 {
  x(x(w16 w21) x(x(w14 w19) w12))
  ::std::numeric::N32::add::add = fn(w12 fn(1 w1))
  ::std::numeric::N32::add::add = fn(w14 fn(1 dup32(w9 w18)))
  ::std::numeric::N32::to_string::to_string = fn(w9 w10)
  ::std::IO::println = fn(ref(w16 w7) fn(w10 _))
  ::loop_vi_loop::main::4 = x(x(w7 w21) x(x(w18 w19) w1))
}

::loop_vi_loop::main::6 { x(x(w4 w4) x(x(w2 w2) _)) }

::std::numeric::N32::ord::lt { fn(ref(dup37(w0 @n32_lt(w10 out)) w0) fn(ref(dup38(w3 w10) w3) out)) }

::std::numeric::N32::add::add { fn(@n32_add(w1 out) fn(w1 out)) }

::std::numeric::N32::to_string::to_string {
  fn(w0 w10)
  ::std::numeric::N32::eq::ne = fn(ref(w0 w6) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w6 w10))))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 {
  x(w7 w6)
  ::std::numeric::N32::eq::ne = fn(ref(w7 w1) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w1 w6))))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup59(w0 w7) x(w11 w15))
  ::std::numeric::N32::rem::rem = fn(w0 fn(10 w1))
  ::std::unicode::Char::add_n32::add = fn(48 fn(w1 w2))
  ::std::data::List::concat::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::div::div = fn(w7 fn(10 w8))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::numeric::N32::eq::ne { fn(ref(dup65(w0 @n32_ne(w10 out)) w0) fn(ref(dup66(w3 w10) w3) out)) }

::std::data::List::concat::concat {
  fn(tup(w5 tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21))))
  ::std::numeric::N32::add::add = fn(w5 fn(w10 w18))
}

::std::unicode::Char::add_n32::add { fn(@n32_add(w1 out) fn(w1 out)) }

::std::numeric::N32::rem::rem { fn(@n32_rem(w1 out) fn(w1 out)) }

::std::numeric::N32::div::div { fn(@n32_div(w1 out) fn(w1 out)) }

::std::numeric::N32::sub::sub { fn(@n32_sub(w1 out) fn(w1 out)) }

::std::unicode::String::to_chars::cast { fn(w0 w0) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w15) fn(w3 _))
  ::std::unicode::String::to_chars::cast = fn(w3 tup(w8 tup(w9 _)))
  ::std::IO::print::1 = x(x(w1 w15) x(w8 w9))
}

::std::IO::print::1 {
  x(w8 x(w6 w5))
  ::std::numeric::N32::eq::ne = fn(ref(w6 w1) fn(ref(0 _) ?(::std::IO::print::3 ::std::IO::print::2 x(w8 x(w1 w5)))))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 tup(w4 w5)))
  ::std::numeric::N32::sub::sub = fn(w15 fn(1 w1))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(w3 w8) w8) fn(w3 _)) }

