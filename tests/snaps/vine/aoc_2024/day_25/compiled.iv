
::std::logical::Option::None { enum(_ enum(r r)) }

::main { ::day_25::main }

::day_25::main {
  fn(ref(w1 w11) _)
  ::day_25::main::1 = x(x(w1 w25) x(x(tup(0 tup(w18 w18)) w23) x(tup(0 tup(w19 w19)) w21)))
  ::day_25::main::25 = x(w23 x(w21 x(0 w27)))
  ::std::numeric::N32::to_string::to_string = fn(w27 tup(@add(8 w30) tup(w31 w32)))
  ::std::IO::println = fn(ref(w25 w11) fn(tup(w30 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w31)))))))) w32)) _))
}

::day_25::main::1 {
  x(x(w10 w16) w8)
  ::std::IO::read_line = fn(ref(w10 w1) enum(::day_25::main::4 enum(::day_25::main::5 x(x(w1 w16) w8))))
}

::day_25::main::4 {
  enum(w0 x(x(w7 w44) x(x(w5 w42) x(w3 w40))))
  ::std::data::List::get = fn(ref(w0 _) fn(0 ref(dup20(w16 w15) w15)))
  ::std::unicode::Char::eq::eq = fn(ref(w16 w19) fn(ref(35 _) ?(::day_25::main::24 ::day_25::main::23 x(x(w5 w38) x(x(w3 w36) x(w28 _))))))
  ::std::data::List::new = fn(5 fn(1 w24))
  ::day_25::main::6 = x(x(w7 w31) x(w19 x(w24 w28)))
  ::day_25::main::1 = x(x(w31 w44) x(x(w38 w42) x(w36 w40)))
}

::day_25::main::5 { x(x(w5 w5) x(x(w3 w3) x(w1 w1))) }

::day_25::main::6 {
  x(x(w9 w14) w7)
  ::std::IO::read_line = fn(ref(w9 w1) enum(::day_25::main::9 enum(::day_25::main::10 x(x(w1 w14) w7))))
}

::day_25::main::9 {
  enum(w0 x(w6 x(w4 w3)))
  ::std::unicode::String::len = fn(ref(w0 w8) w10)
  ::std::numeric::N32::eq::ne = fn(ref(w10 _) fn(ref(0 _) ?(::day_25::main::12 ::day_25::main::11 x(w6 x(w4 x(w3 w8))))))
}

::day_25::main::10 { x(x(w4 w4) x(_ x(w1 w1))) }

::day_25::main::11 {
  x(w6 x(w4 x(x(w3 w14) w1)))
  ::day_25::main::14 = x(x(w4 w12) x(x(w3 w10) x(w1 0)))
  ::day_25::main::6 = x(w6 x(w12 x(w10 w14)))
}

::day_25::main::12 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::day_25::main::14 {
  x(w12 x(w10 x(w8 w7)))
  ::std::data::List::pop_front = fn(ref(w8 w2) enum(::day_25::main::17 enum(::day_25::main::18 x(w12 x(w10 x(w2 w7))))))
}

::day_25::main::17 {
  enum(w0 x(x(w7 w27) x(x(w5 w25) x(w3 dup84(w19 w9)))))
  ::std::unicode::Char::eq::eq = fn(ref(w0 _) fn(ref(w7 w15) ?(::day_25::main::21 ::day_25::main::20 x(x(w5 w21) x(w19 _)))))
  ::std::numeric::N32::add::add = fn(w9 fn(1 w10))
  ::day_25::main::14 = x(x(w15 w27) x(x(w21 w25) x(w3 w10)))
}

::day_25::main::18 { x(x(w5 w5) x(x(w3 w3) _)) }

::day_25::main::20 {
  x(x(w10 w1) x(w8 _))
  ::std::data::List::get = fn(ref(w10 w1) fn(w8 ref(w5 w6)))
  ::std::numeric::N32::add::add = fn(w5 fn(1 w6))
}

::day_25::main::21 { x(x(w3 w3) _) }

::day_25::main::23 {
  x(x(w10 w1) x(x(w8 w8) x(w6 _)))
  ::std::data::List::push_back = fn(ref(w10 w1) fn(w6 _))
}

::day_25::main::24 {
  x(x(w10 w10) x(x(w8 w1) x(w6 _)))
  ::std::data::List::push_back = fn(ref(w8 w1) fn(w6 _))
}

::day_25::main::25 {
  x(w8 x(w7 w6))
  ::std::data::List::pop_front = fn(ref(w7 w1) enum(::day_25::main::28 enum(::day_25::main::29 x(w8 x(w1 w6)))))
}

::day_25::main::28 {
  enum(w0 x(dup112(w7 w20) x(w4 x(w3 w18))))
  ::std::data::List::into_iter = fn(w7 w8)
  ::day_25::main::30 = x(w0 x(x(0 w15) w8))
  ::std::numeric::N32::add::add = fn(w3 fn(w15 w12))
  ::day_25::main::25 = x(w20 x(w4 x(w12 w18)))
}

::day_25::main::29 { x(_ x(_ x(w1 w1))) }

::day_25::main::30 {
  x(w8 x(w7 w5))
  ::std::data::List::IntoIter::next = fn(ref(w5 w1) enum(::day_25::main::33 enum(::day_25::main::34 x(w8 x(w7 w1)))))
}

::day_25::main::33 {
  enum(w0 x(dup129(w8 w16) x(x(w4 w15) w2)))
  ::day_25::fits = fn(w0 fn(w8 ?(::day_25::main::37 ::day_25::main::36 x(x(w4 w12) _))))
  ::day_25::main::30 = x(w16 x(x(w12 w15) w2))
}

::day_25::main::34 { x(_ x(x(w2 w2) _)) }

::day_25::main::36 {
  x(x(w4 w1) _)
  ::std::numeric::N32::add::add = fn(w4 fn(1 w1))
}

::day_25::main::37 { x(x(w2 w2) _) }

::std::unicode::Char::eq::eq { fn(ref(dup142(w0 @eq(w10 out)) w0) fn(ref(dup143(w3 w10) w3) out)) }

::std::numeric::N32::eq::ne { fn(ref(dup146(w0 @ne(w10 out)) w0) fn(ref(dup147(w3 w10) w3) out)) }

::std::numeric::N32::add::add { fn(@add(w1 out) fn(w1 out)) }

::std::numeric::N32::to_string::to_string {
  fn(w0 w10)
  ::std::numeric::N32::eq::ne = fn(ref(w0 w6) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w6 w10))))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 {
  x(w7 w6)
  ::std::numeric::N32::eq::ne = fn(ref(w7 w1) fn(ref(0 _) ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w1 w6))))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup168(w0 w7) x(w11 w15))
  ::std::numeric::N32::rem::rem = fn(w0 fn(10 w1))
  ::std::unicode::Char::add_n32::add = fn(48 fn(w1 w2))
  ::std::data::List::concat::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::div::div = fn(w7 fn(10 w8))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::data::List::concat::concat {
  fn(tup(w5 tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21))))
  ::std::numeric::N32::add::add = fn(w5 fn(w10 w18))
}

::std::unicode::Char::add_n32::add { fn(@add(w1 out) fn(w1 out)) }

::std::numeric::N32::rem::rem { fn(@rem(w1 out) fn(w1 out)) }

::std::numeric::N32::div::div { fn(@div(w1 out) fn(w1 out)) }

::day_25::fits {
  fn(w0 fn(w1 w5))
  ::day_25::fits::1 = x(w0 x(w1 w5))
}

::day_25::fits::1 {
  x(w7 w6)
  ::std::data::List::pop_front = fn(ref(w7 w1) enum(::day_25::fits::4 enum(::day_25::fits::5 x(w1 w6))))
}

::day_25::fits::4 {
  enum(w0 x(w4 x(w3 w10)))
  ::std::data::List::pop_front = fn(ref(w3 w6) enum(::day_25::fits::8 enum(::day_25::fits::9 x(w4 x(w6 x(w0 w10))))))
}

::day_25::fits::5 { x(_ x(_ 1)) }

::day_25::fits::8 {
  enum(w0 x(w5 x(w4 x(w3 w14))))
  ::std::ops::comparison::Ord::gt::1 = fn(ref(w3 _) fn(ref(w0 _) ?(::day_25::fits::1 ::day_25::fits::12 x(w5 x(w4 w14)))))
}

::day_25::fits::9 { x(_ x(_ x(_ 1))) }

::day_25::fits::12 { x(_ x(_ 0)) }

::std::ops::comparison::Ord::gt::1 {
  fn(w1 fn(w4 w14))
  ::std::numeric::N32::ord::lt = fn(w4 fn(w1 w14))
}

::std::numeric::N32::ord::lt { fn(ref(dup231(w0 @lt(w10 out)) w0) fn(ref(dup232(w3 w10) w3) out)) }

::std::data::List::new {
  fn(w0 fn(w1 w10))
  ::std::data::List::new::1 = x(w0 x(w1 x(tup(0 tup(w8 w8)) w10)))
}

::std::data::List::new::1 {
  x(w8 w7)
  ::std::ops::comparison::Ord::gt::1 = fn(ref(w8 w1) fn(ref(0 _) ?(::std::data::List::new::3 ::std::data::List::new::2 x(w1 w7))))
}

::std::data::List::new::2 {
  x(w10 x(dup253(w3 w13) x(w8 w12)))
  ::std::data::List::push_back = fn(ref(w8 w1) fn(w3 _))
  ::std::numeric::N32::sub::sub = fn(w10 fn(1 w6))
  ::std::data::List::new::1 = x(w6 x(w13 x(w1 w12)))
}

::std::data::List::new::3 { x(_ x(_ x(w1 w1))) }

::std::numeric::N32::sub::sub { fn(@sub(w1 out) fn(w1 out)) }

::std::data::List::get {
  fn(ref(tup(w1 tup(w3 w5)) tup(w1 tup(w4 w5))) fn(w9 ref(w14 w15)))
  ::std::data::List::get::1 = x(x(ref(w3 w4) ref(tup(w14 w16) tup(w15 w16))) w9)
}

::std::data::List::get::1 {
  x(w7 w5)
  ::std::numeric::N32::eq::ne = fn(ref(w5 w1) fn(ref(0 _) ?(::std::data::List::get::3 ::std::data::List::get::2 x(w7 w1))))
}

::std::data::List::get::2 {
  x(x(ref(tup(w1 w3) tup(w1 w4)) w17) w12)
  ::std::numeric::N32::sub::sub = fn(w12 fn(1 w11))
  ::std::data::List::get::1 = x(x(ref(w3 w4) w17) w11)
}

::std::data::List::get::3 { x(x(w2 w2) _) }

::std::data::List::pop_front {
  fn(ref(tup(w1 tup(w3 w4)) tup(w21 tup(w19 w4))) w17)
  ::std::numeric::N32::eq::ne = fn(ref(w1 w13) fn(ref(0 _) ?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(w13 w21) x(x(w3 w19) w17)))))
}

::std::data::List::pop_front::2 {
  x(x(w14 w1) x(x(tup(w3 w4) w4) enum(enum(w3 w15) enum(_ w15))))
  ::std::numeric::N32::sub::sub = fn(w14 fn(1 w1))
}

::std::data::List::pop_front::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::List::push_back {
  fn(ref(w1 w9) fn(w3 _))
  ::std::data::List::concat::concat = fn(w1 fn(tup(1 tup(tup(w3 w11) w11)) w9))
}

::std::data::List::into_iter { fn(tup(w0 tup(w1 _)) tup(w0 w1)) }

::std::data::List::IntoIter::next {
  fn(ref(tup(w1 w3) tup(w20 w18)) w16)
  ::std::numeric::N32::eq::ne = fn(ref(w1 w12) fn(ref(0 _) ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(w12 w20) x(x(w3 w18) w16)))))
}

::std::data::List::IntoIter::next::2 {
  x(x(w14 w1) x(x(tup(w3 w4) w4) enum(enum(w3 w15) enum(_ w15))))
  ::std::numeric::N32::sub::sub = fn(w14 fn(1 w1))
}

::std::data::List::IntoIter::next::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::unicode::String::to_chars::cast { fn(w0 w0) }

::std::unicode::Char::eq::ne { fn(ref(dup2325(w0 @ne(w10 out)) w0) fn(ref(dup2326(w3 w10) w3) out)) }

::std::unicode::String::len { fn(ref(tup(dup2376(w0 w13) w2) tup(w0 w2)) w13) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w15) fn(w3 _))
  ::std::unicode::String::to_chars::cast = fn(w3 tup(w8 tup(w9 _)))
  ::std::IO::print::1 = x(x(w1 w15) x(w8 w9))
}

::std::IO::print::1 {
  x(w8 x(w6 w5))
  ::std::numeric::N32::eq::ne = fn(ref(w6 w1) fn(ref(0 _) ?(::std::IO::print::3 ::std::IO::print::2 x(w8 x(w1 w5)))))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 tup(w4 w5)))
  ::std::numeric::N32::sub::sub = fn(w15 fn(1 w1))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(w3 w8) w8) fn(w3 _)) }

::std::IO::read_line {
  fn(ref(w1 w20) w17)
  ::std::IO::read_byte = fn(ref(w1 w6) fn(0 w8))
  ::std::unicode::Char::eq::ne = fn(ref(w8 w13) fn(ref(0 _) ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(w6 w20) x(w13 w17)))))
}

::std::IO::read_line::2 {
  x(w5 x(w3 enum(enum(w11 w15) enum(_ w15))))
  ::std::unicode::Char::eq::eq = fn(ref(w3 w7) fn(ref(10 _) ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(w5 x(w7 w11)))))
}

::std::IO::read_line::3 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(w4 w4) x(_ tup(0 tup(w7 w7)))) }

::std::IO::read_line::6 {
  x(w10 x(w8 w14))
  ::std::IO::read_line::7 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
}

::std::IO::read_line::7 {
  x(x(w10 w21) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 w3))
  ::std::unicode::Char::eq::ne = fn(ref(w3 w12) fn(ref(10 _) ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(w1 w21) x(w12 w8)))))
}

::std::IO::read_line::9 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::7 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::10 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::std::IO::read_byte { fn(ref(dup(@io_read_byte(w3 dup(byte @seq$(io2 w8))) io2) w8) fn(w3 byte)) }

